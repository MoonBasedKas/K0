Terminals unused in grammar

    LSQUARE
    RSQUARE
    RESERVED
    DOUBLE_ARROW
    COLONCOLON
    DOUBLE_SEMICOLON
    SINGLE_QUOTE
    IMPORT
    CONST
    INTERFACE
    OVERRIDE
    EOF_K


State 55 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce
State 120 conflicts: 4 shift/reduce
State 121 conflicts: 4 shift/reduce
State 122 conflicts: 1 shift/reduce
State 123 conflicts: 1 shift/reduce
State 124 conflicts: 1 shift/reduce
State 125 conflicts: 2 shift/reduce
State 126 conflicts: 2 shift/reduce
State 127 conflicts: 3 shift/reduce
State 132 conflicts: 3 shift/reduce
State 186 conflicts: 1 shift/reduce
State 191 conflicts: 1 shift/reduce
State 213 conflicts: 1 shift/reduce
State 214 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 216 conflicts: 1 shift/reduce
State 217 conflicts: 1 shift/reduce
State 218 conflicts: 1 shift/reduce
State 219 conflicts: 1 shift/reduce
State 220 conflicts: 1 shift/reduce
State 221 conflicts: 1 shift/reduce
State 223 conflicts: 2 shift/reduce
State 224 conflicts: 2 shift/reduce
State 225 conflicts: 2 shift/reduce
State 240 conflicts: 1 shift/reduce
State 251 conflicts: 1 shift/reduce
State 269 conflicts: 8 shift/reduce
State 279 conflicts: 7 shift/reduce
State 282 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: topLevelObjectList

    2 topLevelObjectList: topLevelObject
    3                   | topLevelObjectList topLevelObject

    4 topLevelObject: declaration SEMICOLON

    5 declaration: functionDeclaration
    6            | propertyDeclaration

    7 propertyDeclaration: variable variableDeclaration SEMICOLON
    8                    | variable variableDeclaration assignment SEMICOLON
    9                    | variable reciverType variableDeclaration SEMICOLON
   10                    | variable reciverType variableDeclaration assignment SEMICOLON
   11                    | variable typeParameters variableDeclaration SEMICOLON
   12                    | variable typeParameters variableDeclaration assignment SEMICOLON
   13                    | variable typeParameters reciverType variableDeclaration SEMICOLON
   14                    | variable typeParameters reciverType variableDeclaration assignment SEMICOLON

   15 variable: VAL
   16         | VAR

   17 typeParameters: LANGLE variableDeclarationList RANGLE

   18 functionDeclaration: FUN IDENTIFIER functionValueParameters COLON type functionBody
   19                    | FUN IDENTIFIER functionValueParameters COLON type

   20 functionValueParameters: LPAREN functionValueParamList RPAREN

   21 functionValueParamList: functionValueParameter COMMA functionValueParamList
   22                       | functionValueParameter

   23 functionValueParameter: variableDeclaration
   24                       | variableDeclaration ASSIGNMENT expression

   25 type: functionType
   26     | parenthesizedType_opt
   27     | userType

   28 userType: simpleUserType
   29         | userType DOT simpleUserType

   30 simpleUserType: IDENTIFIER
   31               | LANGLE typeArgumentsList RANGLE

   32 typeArgumentsList: typeArgument
   33                  | typeArgument COMMA typeArgumentsList

   34 typeArgument: type
   35             | MULT

   36 reciverType: parenthesizedType_opt

   37 functionType: reciverType DOT functionTypeParameters ARROW type
   38             | functionTypeParameters ARROW type

   39 functionTypeParameters: LPAREN functionTypeParamList RPAREN
   40                       | LPAREN RPAREN

   41 functionTypeParamList: functionTypeParameter COMMA functionTypeParamList
   42                      | functionTypeParameter

   43 functionTypeParameter: variableDeclaration
   44                      | type

   45 parenthesizedType_opt: LPAREN type RPAREN quests_opt

   46 quests_opt: quests
   47           | ε

   48 quests: quest
   49       | quests quest

   50 quest: QUEST_NO_WS
   51      | QUEST_WS

   52 functionBody: block
   53             | ASSIGNMENT expression

   54 block: LCURL RCURL
   55      | LCURL statements RCURL

   56 statements: statement
   57           | statement SEMICOLON
   58           | statements SEMICOLON statement

   59 statement: declaration
   60          | loopStatement
   61          | expression

   62 assignment: IDENTIFIER ASSIGNMENT expression
   63           | IDENTIFIER ADD_ASSIGNMENT expression
   64           | IDENTIFIER SUB_ASSIGNMENT expression

   65 loopStatement: forStatement
   66              | whileStatement
   67              | doWhileStatement

   68 forStatement: FOR LPAREN variableDeclarations IN expression RPAREN forStatement_opt SEMICOLON

   69 forStatement_opt: controlStructureBody
   70                 | ε

   71 whileStatement: WHILE LPAREN expression RPAREN controlStructureBody
   72               | WHILE LPAREN expression RPAREN SEMICOLON

   73 doWhileStatement: DO controlStructureBody WHILE LPAREN expression RPAREN

   74 variableDeclarations: variableDeclaration
   75                     | multiVariableDeclaration

   76 variableDeclaration: IDENTIFIER COLON type

   77 multiVariableDeclaration: LPAREN variableDeclarationList RPAREN

   78 variableDeclarationList: variableDeclaration
   79                        | variableDeclarationList COMMA variableDeclaration

   80 expression: disjunction

   81 disjunction: disjunction DISJ conjunction
   82            | conjunction

   83 conjunction: conjunction CONJ equality
   84            | equality

   85 equality: equality EQEQ comparison
   86         | equality EXCL_EQ comparison
   87         | equality EQEQEQ comparison
   88         | equality EXCL_EQEQ comparison
   89         | comparison

   90 comparison: comparison LANGLE infixOperation
   91           | comparison RANGE infixOperation
   92           | comparison GE infixOperation
   93           | comparison LE infixOperation
   94           | infixOperation

   95 infixOperation: infixOperation IN elvisExpression
   96               | elvisExpression

   97 elvisExpression: elvisExpression QUEST_NO_WS COLON infixFunctionCall
   98                | infixFunctionCall

   99 infixFunctionCall: infixFunctionCall IDENTIFIER rangeExpression
  100                  | rangeExpression

  101 rangeExpression: rangeExpression RANGE additiveExpression
  102                | rangeExpression RANGE_UNTIL additiveExpression
  103                | additiveExpression

  104 additiveExpression: additiveExpression ADD multiplicativeExpression
  105                   | additiveExpression SUB multiplicativeExpression
  106                   | multiplicativeExpression

  107 multiplicativeExpression: multiplicativeExpression MULT prefixUnaryExpression
  108                         | multiplicativeExpression DIV prefixUnaryExpression
  109                         | multiplicativeExpression MOD prefixUnaryExpression
  110                         | prefixUnaryExpression

  111 prefixUnaryExpression: postfixUnaryExpression
  112                      | prefixUnaryOperator postfixUnaryExpression

  113 prefixUnaryOperator: INCR
  114                    | DECR
  115                    | SUB
  116                    | ADD
  117                    | excl

  118 postfixUnaryExpression: primaryExpression postfixUnaryOperator_opt

  119 postfixUnaryOperator_opt: postfixUnaryOperator
  120                         | ε

  121 postfixUnaryOperator: INCR
  122                     | DECR
  123                     | EXCL_NO_WS excl

  124 excl: EXCL_NO_WS
  125     | EXCL_WS

  126 primaryExpression: parenthesizedExpression
  127                  | IDENTIFIER
  128                  | INTEGER_LITERAL
  129                  | HEX_LITERAL
  130                  | CHARACTER_LITERAL
  131                  | REAL_LITERAL
  132                  | TRUE
  133                  | FALSE
  134                  | NULL_K
  135                  | LINE_STRING
  136                  | MULTILINE_STRING
  137                  | ifExpression
  138                  | whenExpression
  139                  | jumpExpression

  140 parenthesizedExpression: LPAREN expression RPAREN

  141 ifExpression: IF LPAREN expression RPAREN SEMICOLON
  142             | IF LPAREN expression RPAREN controlStructureBody SEMICOLON
  143             | IF LPAREN expression RPAREN controlStructureBody SEMICOLON ELSE controlStructureBody

  144 whenExpression: WHEN LCURL RCURL
  145               | WHEN LCURL whenEntries RCURL
  146               | WHEN whenSubject LCURL RCURL
  147               | WHEN whenSubject LCURL whenEntries RCURL

  148 whenSubject: LPAREN expression RPAREN
  149            | LPAREN VAL variableDeclaration ASSIGNMENT expression RPAREN

  150 whenEntries: whenEntries whenEntry
  151            | whenEntry

  152 whenEntry: whenConditionList ARROW controlStructureBody SEMICOLON
  153          | ELSE ARROW controlStructureBody SEMICOLON

  154 whenConditionList: whenConditionList COMMA whenCondition
  155                  | whenCondition

  156 whenCondition: expression
  157              | IN expression

  158 controlStructureBody: block
  159                     | statement
  160                     | ε

  161 jumpExpression: RETURN SEMICOLON
  162               | RETURN expression
  163               | CONTINUE
  164               | BREAK


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ASSIGNMENT <treeptr> (258) 24 53 62 149
    ADD_ASSIGNMENT <treeptr> (259) 63
    SUB_ASSIGNMENT <treeptr> (260) 64
    ADD <treeptr> (261) 104 116
    SUB <treeptr> (262) 105 115
    MULT <treeptr> (263) 35 107
    DIV <treeptr> (264) 108
    MOD <treeptr> (265) 109
    INCR <treeptr> (266) 113 121
    DECR <treeptr> (267) 114 122
    EQEQ <treeptr> (268) 85
    EXCL_EQ <treeptr> (269) 86
    LANGLE <treeptr> (270) 17 31 90
    RANGLE <treeptr> (271) 17 31
    LE <treeptr> (272) 93
    GE <treeptr> (273) 92
    EQEQEQ <treeptr> (274) 87
    EXCL_EQEQ <treeptr> (275) 88
    CONJ <treeptr> (276) 83
    DISJ <treeptr> (277) 81
    EXCL_NO_WS <treeptr> (278) 123 124
    EXCL_WS <treeptr> (279) 125
    QUEST_WS <treeptr> (280) 51
    QUEST_NO_WS <treeptr> (281) 50 97
    RANGE <treeptr> (282) 91 101
    RANGE_UNTIL <treeptr> (283) 102
    DOT <treeptr> (284) 29 37
    COMMA <treeptr> (285) 21 33 41 79 154
    LPAREN <treeptr> (286) 20 39 40 45 68 71 72 73 77 140 141 142 143 148 149
    RPAREN <treeptr> (287) 20 39 40 45 68 71 72 73 77 140 141 142 143 148 149
    LSQUARE <treeptr> (288)
    RSQUARE <treeptr> (289)
    LCURL <treeptr> (290) 54 55 144 145 146 147
    RCURL <treeptr> (291) 54 55 144 145 146 147
    COLON <treeptr> (292) 18 19 76 97
    SEMICOLON <treeptr> (293) 4 7 8 9 10 11 12 13 14 57 58 68 72 141 142 143 152 153 161
    RESERVED <treeptr> (294)
    ARROW <treeptr> (295) 37 38 152 153
    DOUBLE_ARROW <treeptr> (296)
    COLONCOLON <treeptr> (297)
    DOUBLE_SEMICOLON <treeptr> (298)
    SINGLE_QUOTE <treeptr> (299)
    BREAK <treeptr> (300) 164
    CONTINUE <treeptr> (301) 163
    DO <treeptr> (302) 73
    ELSE <treeptr> (303) 143 153
    FALSE <treeptr> (304) 133
    FOR <treeptr> (305) 68
    FUN <treeptr> (306) 18 19
    IF <treeptr> (307) 141 142 143
    IN <treeptr> (308) 68 95 157
    NULL_K <treeptr> (309) 134
    RETURN <treeptr> (310) 161 162
    TRUE <treeptr> (311) 132
    VAL <treeptr> (312) 15 149
    VAR <treeptr> (313) 16
    WHEN <treeptr> (314) 144 145 146 147
    WHILE <treeptr> (315) 71 72 73
    IMPORT <treeptr> (316)
    CONST <treeptr> (317)
    INTERFACE <treeptr> (318)
    OVERRIDE <treeptr> (319)
    INTEGER_LITERAL <treeptr> (320) 128
    HEX_LITERAL <treeptr> (321) 129
    REAL_LITERAL <treeptr> (322) 131
    CHARACTER_LITERAL <treeptr> (323) 130
    IDENTIFIER <treeptr> (324) 18 19 30 62 63 64 76 99 127
    LINE_STRING <treeptr> (325) 135
    MULTILINE_STRING <treeptr> (326) 136
    EOF_K <treeptr> (327)


Nonterminals, with rules where they appear

    $accept (73)
        on left: 0
    program <treeptr> (74)
        on left: 1
        on right: 0
    topLevelObjectList <treeptr> (75)
        on left: 2 3
        on right: 1 3
    topLevelObject <treeptr> (76)
        on left: 4
        on right: 2 3
    declaration <treeptr> (77)
        on left: 5 6
        on right: 4 59
    propertyDeclaration <treeptr> (78)
        on left: 7 8 9 10 11 12 13 14
        on right: 6
    variable <treeptr> (79)
        on left: 15 16
        on right: 7 8 9 10 11 12 13 14
    typeParameters (80)
        on left: 17
        on right: 11 12 13 14
    functionDeclaration <treeptr> (81)
        on left: 18 19
        on right: 5
    functionValueParameters <treeptr> (82)
        on left: 20
        on right: 18 19
    functionValueParamList <treeptr> (83)
        on left: 21 22
        on right: 20 21
    functionValueParameter <treeptr> (84)
        on left: 23 24
        on right: 21 22
    type <treeptr> (85)
        on left: 25 26 27
        on right: 18 19 34 37 38 44 45 76
    userType <treeptr> (86)
        on left: 28 29
        on right: 27 29
    simpleUserType <treeptr> (87)
        on left: 30 31
        on right: 28 29
    typeArgumentsList <treeptr> (88)
        on left: 32 33
        on right: 31 33
    typeArgument <treeptr> (89)
        on left: 34 35
        on right: 32 33
    reciverType <treeptr> (90)
        on left: 36
        on right: 9 10 13 14 37
    functionType <treeptr> (91)
        on left: 37 38
        on right: 25
    functionTypeParameters <treeptr> (92)
        on left: 39 40
        on right: 37 38
    functionTypeParamList <treeptr> (93)
        on left: 41 42
        on right: 39 41
    functionTypeParameter <treeptr> (94)
        on left: 43 44
        on right: 41 42
    parenthesizedType_opt <treeptr> (95)
        on left: 45
        on right: 26 36
    quests_opt <treeptr> (96)
        on left: 46 47
        on right: 45
    quests <treeptr> (97)
        on left: 48 49
        on right: 46 49
    quest <treeptr> (98)
        on left: 50 51
        on right: 48 49
    functionBody <treeptr> (99)
        on left: 52 53
        on right: 18
    block <treeptr> (100)
        on left: 54 55
        on right: 52 158
    statements <treeptr> (101)
        on left: 56 57 58
        on right: 55 58
    statement <treeptr> (102)
        on left: 59 60 61
        on right: 56 57 58 159
    assignment <treeptr> (103)
        on left: 62 63 64
        on right: 8 10 12 14
    loopStatement <treeptr> (104)
        on left: 65 66 67
        on right: 60
    forStatement <treeptr> (105)
        on left: 68
        on right: 65
    forStatement_opt (106)
        on left: 69 70
        on right: 68
    whileStatement <treeptr> (107)
        on left: 71 72
        on right: 66
    doWhileStatement <treeptr> (108)
        on left: 73
        on right: 67
    variableDeclarations <treeptr> (109)
        on left: 74 75
        on right: 68
    variableDeclaration <treeptr> (110)
        on left: 76
        on right: 7 8 9 10 11 12 13 14 23 24 43 74 78 79 149
    multiVariableDeclaration <treeptr> (111)
        on left: 77
        on right: 75
    variableDeclarationList <treeptr> (112)
        on left: 78 79
        on right: 17 77 79
    expression <treeptr> (113)
        on left: 80
        on right: 24 53 61 62 63 64 68 71 72 73 140 141 142 143 148 149 156 157 162
    disjunction <treeptr> (114)
        on left: 81 82
        on right: 80 81
    conjunction <treeptr> (115)
        on left: 83 84
        on right: 81 82 83
    equality <treeptr> (116)
        on left: 85 86 87 88 89
        on right: 83 84 85 86 87 88
    comparison <treeptr> (117)
        on left: 90 91 92 93 94
        on right: 85 86 87 88 89 90 91 92 93
    infixOperation <treeptr> (118)
        on left: 95 96
        on right: 90 91 92 93 94 95
    elvisExpression <treeptr> (119)
        on left: 97 98
        on right: 95 96 97
    infixFunctionCall <treeptr> (120)
        on left: 99 100
        on right: 97 98 99
    rangeExpression <treeptr> (121)
        on left: 101 102 103
        on right: 99 100 101 102
    additiveExpression <treeptr> (122)
        on left: 104 105 106
        on right: 101 102 103 104 105
    multiplicativeExpression <treeptr> (123)
        on left: 107 108 109 110
        on right: 104 105 106 107 108 109
    prefixUnaryExpression <treeptr> (124)
        on left: 111 112
        on right: 107 108 109 110
    prefixUnaryOperator <treeptr> (125)
        on left: 113 114 115 116 117
        on right: 112
    postfixUnaryExpression <treeptr> (126)
        on left: 118
        on right: 111 112
    postfixUnaryOperator_opt (127)
        on left: 119 120
        on right: 118
    postfixUnaryOperator <treeptr> (128)
        on left: 121 122 123
        on right: 119
    excl <treeptr> (129)
        on left: 124 125
        on right: 117 123
    primaryExpression <treeptr> (130)
        on left: 126 127 128 129 130 131 132 133 134 135 136 137 138 139
        on right: 118
    parenthesizedExpression <treeptr> (131)
        on left: 140
        on right: 126
    ifExpression <treeptr> (132)
        on left: 141 142 143
        on right: 137
    whenExpression <treeptr> (133)
        on left: 144 145 146 147
        on right: 138
    whenSubject <treeptr> (134)
        on left: 148 149
        on right: 146 147
    whenEntries <treeptr> (135)
        on left: 150 151
        on right: 145 147 150
    whenEntry <treeptr> (136)
        on left: 152 153
        on right: 150 151
    whenConditionList <treeptr> (137)
        on left: 154 155
        on right: 152 154
    whenCondition <treeptr> (138)
        on left: 156 157
        on right: 154 155
    controlStructureBody <treeptr> (139)
        on left: 158 159 160
        on right: 69 71 73 142 143 152 153
    jumpExpression <treeptr> (140)
        on left: 161 162 163 164
        on right: 139


State 0

    0 $accept: • program $end

    FUN  shift, and go to state 1
    VAL  shift, and go to state 2
    VAR  shift, and go to state 3

    program              go to state 4
    topLevelObjectList   go to state 5
    topLevelObject       go to state 6
    declaration          go to state 7
    propertyDeclaration  go to state 8
    variable             go to state 9
    functionDeclaration  go to state 10


State 1

   18 functionDeclaration: FUN • IDENTIFIER functionValueParameters COLON type functionBody
   19                    | FUN • IDENTIFIER functionValueParameters COLON type

    IDENTIFIER  shift, and go to state 11


State 2

   15 variable: VAL •

    $default  reduce using rule 15 (variable)


State 3

   16 variable: VAR •

    $default  reduce using rule 16 (variable)


State 4

    0 $accept: program • $end

    $end  shift, and go to state 12


State 5

    1 program: topLevelObjectList •
    3 topLevelObjectList: topLevelObjectList • topLevelObject

    FUN  shift, and go to state 1
    VAL  shift, and go to state 2
    VAR  shift, and go to state 3

    $default  reduce using rule 1 (program)

    topLevelObject       go to state 13
    declaration          go to state 7
    propertyDeclaration  go to state 8
    variable             go to state 9
    functionDeclaration  go to state 10


State 6

    2 topLevelObjectList: topLevelObject •

    $default  reduce using rule 2 (topLevelObjectList)


State 7

    4 topLevelObject: declaration • SEMICOLON

    SEMICOLON  shift, and go to state 14


State 8

    6 declaration: propertyDeclaration •

    $default  reduce using rule 6 (declaration)


State 9

    7 propertyDeclaration: variable • variableDeclaration SEMICOLON
    8                    | variable • variableDeclaration assignment SEMICOLON
    9                    | variable • reciverType variableDeclaration SEMICOLON
   10                    | variable • reciverType variableDeclaration assignment SEMICOLON
   11                    | variable • typeParameters variableDeclaration SEMICOLON
   12                    | variable • typeParameters variableDeclaration assignment SEMICOLON
   13                    | variable • typeParameters reciverType variableDeclaration SEMICOLON
   14                    | variable • typeParameters reciverType variableDeclaration assignment SEMICOLON

    LANGLE      shift, and go to state 15
    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    typeParameters         go to state 18
    reciverType            go to state 19
    parenthesizedType_opt  go to state 20
    variableDeclaration    go to state 21


State 10

    5 declaration: functionDeclaration •

    $default  reduce using rule 5 (declaration)


State 11

   18 functionDeclaration: FUN IDENTIFIER • functionValueParameters COLON type functionBody
   19                    | FUN IDENTIFIER • functionValueParameters COLON type

    LPAREN  shift, and go to state 22

    functionValueParameters  go to state 23


State 12

    0 $accept: program $end •

    $default  accept


State 13

    3 topLevelObjectList: topLevelObjectList topLevelObject •

    $default  reduce using rule 3 (topLevelObjectList)


State 14

    4 topLevelObject: declaration SEMICOLON •

    $default  reduce using rule 4 (topLevelObject)


State 15

   17 typeParameters: LANGLE • variableDeclarationList RANGLE

    IDENTIFIER  shift, and go to state 17

    variableDeclaration      go to state 24
    variableDeclarationList  go to state 25


State 16

   45 parenthesizedType_opt: LPAREN • type RPAREN quests_opt

    LANGLE      shift, and go to state 26
    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28

    type                    go to state 29
    userType                go to state 30
    simpleUserType          go to state 31
    reciverType             go to state 32
    functionType            go to state 33
    functionTypeParameters  go to state 34
    parenthesizedType_opt   go to state 35


State 17

   76 variableDeclaration: IDENTIFIER • COLON type

    COLON  shift, and go to state 36


State 18

   11 propertyDeclaration: variable typeParameters • variableDeclaration SEMICOLON
   12                    | variable typeParameters • variableDeclaration assignment SEMICOLON
   13                    | variable typeParameters • reciverType variableDeclaration SEMICOLON
   14                    | variable typeParameters • reciverType variableDeclaration assignment SEMICOLON

    LPAREN      shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    reciverType            go to state 37
    parenthesizedType_opt  go to state 20
    variableDeclaration    go to state 38


State 19

    9 propertyDeclaration: variable reciverType • variableDeclaration SEMICOLON
   10                    | variable reciverType • variableDeclaration assignment SEMICOLON

    IDENTIFIER  shift, and go to state 17

    variableDeclaration  go to state 39


State 20

   36 reciverType: parenthesizedType_opt •

    $default  reduce using rule 36 (reciverType)


State 21

    7 propertyDeclaration: variable variableDeclaration • SEMICOLON
    8                    | variable variableDeclaration • assignment SEMICOLON

    SEMICOLON   shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    assignment  go to state 42


State 22

   20 functionValueParameters: LPAREN • functionValueParamList RPAREN

    IDENTIFIER  shift, and go to state 17

    functionValueParamList  go to state 43
    functionValueParameter  go to state 44
    variableDeclaration     go to state 45


State 23

   18 functionDeclaration: FUN IDENTIFIER functionValueParameters • COLON type functionBody
   19                    | FUN IDENTIFIER functionValueParameters • COLON type

    COLON  shift, and go to state 46


State 24

   78 variableDeclarationList: variableDeclaration •

    $default  reduce using rule 78 (variableDeclarationList)


State 25

   17 typeParameters: LANGLE variableDeclarationList • RANGLE
   79 variableDeclarationList: variableDeclarationList • COMMA variableDeclaration

    RANGLE  shift, and go to state 47
    COMMA   shift, and go to state 48


State 26

   31 simpleUserType: LANGLE • typeArgumentsList RANGLE

    MULT        shift, and go to state 49
    LANGLE      shift, and go to state 26
    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28

    type                    go to state 50
    userType                go to state 30
    simpleUserType          go to state 31
    typeArgumentsList       go to state 51
    typeArgument            go to state 52
    reciverType             go to state 32
    functionType            go to state 33
    functionTypeParameters  go to state 34
    parenthesizedType_opt   go to state 35


State 27

   39 functionTypeParameters: LPAREN • functionTypeParamList RPAREN
   40                       | LPAREN • RPAREN
   45 parenthesizedType_opt: LPAREN • type RPAREN quests_opt

    LANGLE      shift, and go to state 26
    LPAREN      shift, and go to state 27
    RPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 54

    type                    go to state 55
    userType                go to state 30
    simpleUserType          go to state 31
    reciverType             go to state 32
    functionType            go to state 33
    functionTypeParameters  go to state 34
    functionTypeParamList   go to state 56
    functionTypeParameter   go to state 57
    parenthesizedType_opt   go to state 35
    variableDeclaration     go to state 58


State 28

   30 simpleUserType: IDENTIFIER •

    $default  reduce using rule 30 (simpleUserType)


State 29

   45 parenthesizedType_opt: LPAREN type • RPAREN quests_opt

    RPAREN  shift, and go to state 59


State 30

   27 type: userType •
   29 userType: userType • DOT simpleUserType

    DOT  shift, and go to state 60

    $default  reduce using rule 27 (type)


State 31

   28 userType: simpleUserType •

    $default  reduce using rule 28 (userType)


State 32

   37 functionType: reciverType • DOT functionTypeParameters ARROW type

    DOT  shift, and go to state 61


State 33

   25 type: functionType •

    $default  reduce using rule 25 (type)


State 34

   38 functionType: functionTypeParameters • ARROW type

    ARROW  shift, and go to state 62


State 35

   26 type: parenthesizedType_opt •
   36 reciverType: parenthesizedType_opt •

    DOT       reduce using rule 36 (reciverType)
    $default  reduce using rule 26 (type)


State 36

   76 variableDeclaration: IDENTIFIER COLON • type

    LANGLE      shift, and go to state 26
    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28

    type                    go to state 63
    userType                go to state 30
    simpleUserType          go to state 31
    reciverType             go to state 32
    functionType            go to state 33
    functionTypeParameters  go to state 34
    parenthesizedType_opt   go to state 35


State 37

   13 propertyDeclaration: variable typeParameters reciverType • variableDeclaration SEMICOLON
   14                    | variable typeParameters reciverType • variableDeclaration assignment SEMICOLON

    IDENTIFIER  shift, and go to state 17

    variableDeclaration  go to state 64


State 38

   11 propertyDeclaration: variable typeParameters variableDeclaration • SEMICOLON
   12                    | variable typeParameters variableDeclaration • assignment SEMICOLON

    SEMICOLON   shift, and go to state 65
    IDENTIFIER  shift, and go to state 41

    assignment  go to state 66


State 39

    9 propertyDeclaration: variable reciverType variableDeclaration • SEMICOLON
   10                    | variable reciverType variableDeclaration • assignment SEMICOLON

    SEMICOLON   shift, and go to state 67
    IDENTIFIER  shift, and go to state 41

    assignment  go to state 68


State 40

    7 propertyDeclaration: variable variableDeclaration SEMICOLON •

    $default  reduce using rule 7 (propertyDeclaration)


State 41

   62 assignment: IDENTIFIER • ASSIGNMENT expression
   63           | IDENTIFIER • ADD_ASSIGNMENT expression
   64           | IDENTIFIER • SUB_ASSIGNMENT expression

    ASSIGNMENT      shift, and go to state 69
    ADD_ASSIGNMENT  shift, and go to state 70
    SUB_ASSIGNMENT  shift, and go to state 71


State 42

    8 propertyDeclaration: variable variableDeclaration assignment • SEMICOLON

    SEMICOLON  shift, and go to state 72


State 43

   20 functionValueParameters: LPAREN functionValueParamList • RPAREN

    RPAREN  shift, and go to state 73


State 44

   21 functionValueParamList: functionValueParameter • COMMA functionValueParamList
   22                       | functionValueParameter •

    COMMA  shift, and go to state 74

    $default  reduce using rule 22 (functionValueParamList)


State 45

   23 functionValueParameter: variableDeclaration •
   24                       | variableDeclaration • ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 75

    $default  reduce using rule 23 (functionValueParameter)


State 46

   18 functionDeclaration: FUN IDENTIFIER functionValueParameters COLON • type functionBody
   19                    | FUN IDENTIFIER functionValueParameters COLON • type

    LANGLE      shift, and go to state 26
    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28

    type                    go to state 76
    userType                go to state 30
    simpleUserType          go to state 31
    reciverType             go to state 32
    functionType            go to state 33
    functionTypeParameters  go to state 34
    parenthesizedType_opt   go to state 35


State 47

   17 typeParameters: LANGLE variableDeclarationList RANGLE •

    $default  reduce using rule 17 (typeParameters)


State 48

   79 variableDeclarationList: variableDeclarationList COMMA • variableDeclaration

    IDENTIFIER  shift, and go to state 17

    variableDeclaration  go to state 77


State 49

   35 typeArgument: MULT •

    $default  reduce using rule 35 (typeArgument)


State 50

   34 typeArgument: type •

    $default  reduce using rule 34 (typeArgument)


State 51

   31 simpleUserType: LANGLE typeArgumentsList • RANGLE

    RANGLE  shift, and go to state 78


State 52

   32 typeArgumentsList: typeArgument •
   33                  | typeArgument • COMMA typeArgumentsList

    COMMA  shift, and go to state 79

    $default  reduce using rule 32 (typeArgumentsList)


State 53

   40 functionTypeParameters: LPAREN RPAREN •

    $default  reduce using rule 40 (functionTypeParameters)


State 54

   30 simpleUserType: IDENTIFIER •
   76 variableDeclaration: IDENTIFIER • COLON type

    COLON  shift, and go to state 36

    $default  reduce using rule 30 (simpleUserType)


State 55

   44 functionTypeParameter: type •
   45 parenthesizedType_opt: LPAREN type • RPAREN quests_opt

    RPAREN  shift, and go to state 59

    RPAREN    [reduce using rule 44 (functionTypeParameter)]
    $default  reduce using rule 44 (functionTypeParameter)


State 56

   39 functionTypeParameters: LPAREN functionTypeParamList • RPAREN

    RPAREN  shift, and go to state 80


State 57

   41 functionTypeParamList: functionTypeParameter • COMMA functionTypeParamList
   42                      | functionTypeParameter •

    COMMA  shift, and go to state 81

    $default  reduce using rule 42 (functionTypeParamList)


State 58

   43 functionTypeParameter: variableDeclaration •

    $default  reduce using rule 43 (functionTypeParameter)


State 59

   45 parenthesizedType_opt: LPAREN type RPAREN • quests_opt

    QUEST_WS     shift, and go to state 82
    QUEST_NO_WS  shift, and go to state 83

    QUEST_NO_WS  [reduce using rule 47 (quests_opt)]
    $default     reduce using rule 47 (quests_opt)

    quests_opt  go to state 84
    quests      go to state 85
    quest       go to state 86


State 60

   29 userType: userType DOT • simpleUserType

    LANGLE      shift, and go to state 26
    IDENTIFIER  shift, and go to state 28

    simpleUserType  go to state 87


State 61

   37 functionType: reciverType DOT • functionTypeParameters ARROW type

    LPAREN  shift, and go to state 88

    functionTypeParameters  go to state 89


State 62

   38 functionType: functionTypeParameters ARROW • type

    LANGLE      shift, and go to state 26
    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28

    type                    go to state 90
    userType                go to state 30
    simpleUserType          go to state 31
    reciverType             go to state 32
    functionType            go to state 33
    functionTypeParameters  go to state 34
    parenthesizedType_opt   go to state 35


State 63

   76 variableDeclaration: IDENTIFIER COLON type •

    $default  reduce using rule 76 (variableDeclaration)


State 64

   13 propertyDeclaration: variable typeParameters reciverType variableDeclaration • SEMICOLON
   14                    | variable typeParameters reciverType variableDeclaration • assignment SEMICOLON

    SEMICOLON   shift, and go to state 91
    IDENTIFIER  shift, and go to state 41

    assignment  go to state 92


State 65

   11 propertyDeclaration: variable typeParameters variableDeclaration SEMICOLON •

    $default  reduce using rule 11 (propertyDeclaration)


State 66

   12 propertyDeclaration: variable typeParameters variableDeclaration assignment • SEMICOLON

    SEMICOLON  shift, and go to state 93


State 67

    9 propertyDeclaration: variable reciverType variableDeclaration SEMICOLON •

    $default  reduce using rule 9 (propertyDeclaration)


State 68

   10 propertyDeclaration: variable reciverType variableDeclaration assignment • SEMICOLON

    SEMICOLON  shift, and go to state 94


State 69

   62 assignment: IDENTIFIER ASSIGNMENT • expression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 117
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 70

   63 assignment: IDENTIFIER ADD_ASSIGNMENT • expression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 137
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 71

   64 assignment: IDENTIFIER SUB_ASSIGNMENT • expression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 138
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 72

    8 propertyDeclaration: variable variableDeclaration assignment SEMICOLON •

    $default  reduce using rule 8 (propertyDeclaration)


State 73

   20 functionValueParameters: LPAREN functionValueParamList RPAREN •

    $default  reduce using rule 20 (functionValueParameters)


State 74

   21 functionValueParamList: functionValueParameter COMMA • functionValueParamList

    IDENTIFIER  shift, and go to state 17

    functionValueParamList  go to state 139
    functionValueParameter  go to state 44
    variableDeclaration     go to state 45


State 75

   24 functionValueParameter: variableDeclaration ASSIGNMENT • expression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 140
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 76

   18 functionDeclaration: FUN IDENTIFIER functionValueParameters COLON type • functionBody
   19                    | FUN IDENTIFIER functionValueParameters COLON type •

    ASSIGNMENT  shift, and go to state 141
    LCURL       shift, and go to state 142

    $default  reduce using rule 19 (functionDeclaration)

    functionBody  go to state 143
    block         go to state 144


State 77

   79 variableDeclarationList: variableDeclarationList COMMA variableDeclaration •

    $default  reduce using rule 79 (variableDeclarationList)


State 78

   31 simpleUserType: LANGLE typeArgumentsList RANGLE •

    $default  reduce using rule 31 (simpleUserType)


State 79

   33 typeArgumentsList: typeArgument COMMA • typeArgumentsList

    MULT        shift, and go to state 49
    LANGLE      shift, and go to state 26
    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28

    type                    go to state 50
    userType                go to state 30
    simpleUserType          go to state 31
    typeArgumentsList       go to state 145
    typeArgument            go to state 52
    reciverType             go to state 32
    functionType            go to state 33
    functionTypeParameters  go to state 34
    parenthesizedType_opt   go to state 35


State 80

   39 functionTypeParameters: LPAREN functionTypeParamList RPAREN •

    $default  reduce using rule 39 (functionTypeParameters)


State 81

   41 functionTypeParamList: functionTypeParameter COMMA • functionTypeParamList

    LANGLE      shift, and go to state 26
    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 54

    type                    go to state 146
    userType                go to state 30
    simpleUserType          go to state 31
    reciverType             go to state 32
    functionType            go to state 33
    functionTypeParameters  go to state 34
    functionTypeParamList   go to state 147
    functionTypeParameter   go to state 57
    parenthesizedType_opt   go to state 35
    variableDeclaration     go to state 58


State 82

   51 quest: QUEST_WS •

    $default  reduce using rule 51 (quest)


State 83

   50 quest: QUEST_NO_WS •

    $default  reduce using rule 50 (quest)


State 84

   45 parenthesizedType_opt: LPAREN type RPAREN quests_opt •

    $default  reduce using rule 45 (parenthesizedType_opt)


State 85

   46 quests_opt: quests •
   49 quests: quests • quest

    QUEST_WS     shift, and go to state 82
    QUEST_NO_WS  shift, and go to state 83

    QUEST_NO_WS  [reduce using rule 46 (quests_opt)]
    $default     reduce using rule 46 (quests_opt)

    quest  go to state 148


State 86

   48 quests: quest •

    $default  reduce using rule 48 (quests)


State 87

   29 userType: userType DOT simpleUserType •

    $default  reduce using rule 29 (userType)


State 88

   39 functionTypeParameters: LPAREN • functionTypeParamList RPAREN
   40                       | LPAREN • RPAREN

    LANGLE      shift, and go to state 26
    LPAREN      shift, and go to state 27
    RPAREN      shift, and go to state 53
    IDENTIFIER  shift, and go to state 54

    type                    go to state 146
    userType                go to state 30
    simpleUserType          go to state 31
    reciverType             go to state 32
    functionType            go to state 33
    functionTypeParameters  go to state 34
    functionTypeParamList   go to state 56
    functionTypeParameter   go to state 57
    parenthesizedType_opt   go to state 35
    variableDeclaration     go to state 58


State 89

   37 functionType: reciverType DOT functionTypeParameters • ARROW type

    ARROW  shift, and go to state 149


State 90

   38 functionType: functionTypeParameters ARROW type •

    $default  reduce using rule 38 (functionType)


State 91

   13 propertyDeclaration: variable typeParameters reciverType variableDeclaration SEMICOLON •

    $default  reduce using rule 13 (propertyDeclaration)


State 92

   14 propertyDeclaration: variable typeParameters reciverType variableDeclaration assignment • SEMICOLON

    SEMICOLON  shift, and go to state 150


State 93

   12 propertyDeclaration: variable typeParameters variableDeclaration assignment SEMICOLON •

    $default  reduce using rule 12 (propertyDeclaration)


State 94

   10 propertyDeclaration: variable reciverType variableDeclaration assignment SEMICOLON •

    $default  reduce using rule 10 (propertyDeclaration)


State 95

  116 prefixUnaryOperator: ADD •

    $default  reduce using rule 116 (prefixUnaryOperator)


State 96

  115 prefixUnaryOperator: SUB •

    $default  reduce using rule 115 (prefixUnaryOperator)


State 97

  113 prefixUnaryOperator: INCR •

    $default  reduce using rule 113 (prefixUnaryOperator)


State 98

  114 prefixUnaryOperator: DECR •

    $default  reduce using rule 114 (prefixUnaryOperator)


State 99

  124 excl: EXCL_NO_WS •

    $default  reduce using rule 124 (excl)


State 100

  125 excl: EXCL_WS •

    $default  reduce using rule 125 (excl)


State 101

  140 parenthesizedExpression: LPAREN • expression RPAREN

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 151
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 102

  164 jumpExpression: BREAK •

    $default  reduce using rule 164 (jumpExpression)


State 103

  163 jumpExpression: CONTINUE •

    $default  reduce using rule 163 (jumpExpression)


State 104

  133 primaryExpression: FALSE •

    $default  reduce using rule 133 (primaryExpression)


State 105

  141 ifExpression: IF • LPAREN expression RPAREN SEMICOLON
  142             | IF • LPAREN expression RPAREN controlStructureBody SEMICOLON
  143             | IF • LPAREN expression RPAREN controlStructureBody SEMICOLON ELSE controlStructureBody

    LPAREN  shift, and go to state 152


State 106

  134 primaryExpression: NULL_K •

    $default  reduce using rule 134 (primaryExpression)


State 107

  161 jumpExpression: RETURN • SEMICOLON
  162               | RETURN • expression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    SEMICOLON          shift, and go to state 153
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 154
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 108

  132 primaryExpression: TRUE •

    $default  reduce using rule 132 (primaryExpression)


State 109

  144 whenExpression: WHEN • LCURL RCURL
  145               | WHEN • LCURL whenEntries RCURL
  146               | WHEN • whenSubject LCURL RCURL
  147               | WHEN • whenSubject LCURL whenEntries RCURL

    LPAREN  shift, and go to state 155
    LCURL   shift, and go to state 156

    whenSubject  go to state 157


State 110

  128 primaryExpression: INTEGER_LITERAL •

    $default  reduce using rule 128 (primaryExpression)


State 111

  129 primaryExpression: HEX_LITERAL •

    $default  reduce using rule 129 (primaryExpression)


State 112

  131 primaryExpression: REAL_LITERAL •

    $default  reduce using rule 131 (primaryExpression)


State 113

  130 primaryExpression: CHARACTER_LITERAL •

    $default  reduce using rule 130 (primaryExpression)


State 114

  127 primaryExpression: IDENTIFIER •

    $default  reduce using rule 127 (primaryExpression)


State 115

  135 primaryExpression: LINE_STRING •

    $default  reduce using rule 135 (primaryExpression)


State 116

  136 primaryExpression: MULTILINE_STRING •

    $default  reduce using rule 136 (primaryExpression)


State 117

   62 assignment: IDENTIFIER ASSIGNMENT expression •

    $default  reduce using rule 62 (assignment)


State 118

   80 expression: disjunction •
   81 disjunction: disjunction • DISJ conjunction

    DISJ  shift, and go to state 158

    DISJ      [reduce using rule 80 (expression)]
    $default  reduce using rule 80 (expression)


State 119

   82 disjunction: conjunction •
   83 conjunction: conjunction • CONJ equality

    CONJ  shift, and go to state 159

    CONJ      [reduce using rule 82 (disjunction)]
    $default  reduce using rule 82 (disjunction)


State 120

   84 conjunction: equality •
   85 equality: equality • EQEQ comparison
   86         | equality • EXCL_EQ comparison
   87         | equality • EQEQEQ comparison
   88         | equality • EXCL_EQEQ comparison

    EQEQ       shift, and go to state 160
    EXCL_EQ    shift, and go to state 161
    EQEQEQ     shift, and go to state 162
    EXCL_EQEQ  shift, and go to state 163

    EQEQ       [reduce using rule 84 (conjunction)]
    EXCL_EQ    [reduce using rule 84 (conjunction)]
    EQEQEQ     [reduce using rule 84 (conjunction)]
    EXCL_EQEQ  [reduce using rule 84 (conjunction)]
    $default   reduce using rule 84 (conjunction)


State 121

   89 equality: comparison •
   90 comparison: comparison • LANGLE infixOperation
   91           | comparison • RANGE infixOperation
   92           | comparison • GE infixOperation
   93           | comparison • LE infixOperation

    LANGLE  shift, and go to state 164
    LE      shift, and go to state 165
    GE      shift, and go to state 166
    RANGE   shift, and go to state 167

    LANGLE    [reduce using rule 89 (equality)]
    LE        [reduce using rule 89 (equality)]
    GE        [reduce using rule 89 (equality)]
    RANGE     [reduce using rule 89 (equality)]
    $default  reduce using rule 89 (equality)


State 122

   94 comparison: infixOperation •
   95 infixOperation: infixOperation • IN elvisExpression

    IN  shift, and go to state 168

    IN        [reduce using rule 94 (comparison)]
    $default  reduce using rule 94 (comparison)


State 123

   96 infixOperation: elvisExpression •
   97 elvisExpression: elvisExpression • QUEST_NO_WS COLON infixFunctionCall

    QUEST_NO_WS  shift, and go to state 169

    QUEST_NO_WS  [reduce using rule 96 (infixOperation)]
    $default     reduce using rule 96 (infixOperation)


State 124

   98 elvisExpression: infixFunctionCall •
   99 infixFunctionCall: infixFunctionCall • IDENTIFIER rangeExpression

    IDENTIFIER  shift, and go to state 170

    IDENTIFIER  [reduce using rule 98 (elvisExpression)]
    $default    reduce using rule 98 (elvisExpression)


State 125

  100 infixFunctionCall: rangeExpression •
  101 rangeExpression: rangeExpression • RANGE additiveExpression
  102                | rangeExpression • RANGE_UNTIL additiveExpression

    RANGE        shift, and go to state 171
    RANGE_UNTIL  shift, and go to state 172

    RANGE        [reduce using rule 100 (infixFunctionCall)]
    RANGE_UNTIL  [reduce using rule 100 (infixFunctionCall)]
    $default     reduce using rule 100 (infixFunctionCall)


State 126

  103 rangeExpression: additiveExpression •
  104 additiveExpression: additiveExpression • ADD multiplicativeExpression
  105                   | additiveExpression • SUB multiplicativeExpression

    ADD  shift, and go to state 173
    SUB  shift, and go to state 174

    ADD       [reduce using rule 103 (rangeExpression)]
    SUB       [reduce using rule 103 (rangeExpression)]
    $default  reduce using rule 103 (rangeExpression)


State 127

  106 additiveExpression: multiplicativeExpression •
  107 multiplicativeExpression: multiplicativeExpression • MULT prefixUnaryExpression
  108                         | multiplicativeExpression • DIV prefixUnaryExpression
  109                         | multiplicativeExpression • MOD prefixUnaryExpression

    MULT  shift, and go to state 175
    DIV   shift, and go to state 176
    MOD   shift, and go to state 177

    MULT      [reduce using rule 106 (additiveExpression)]
    DIV       [reduce using rule 106 (additiveExpression)]
    MOD       [reduce using rule 106 (additiveExpression)]
    $default  reduce using rule 106 (additiveExpression)


State 128

  110 multiplicativeExpression: prefixUnaryExpression •

    $default  reduce using rule 110 (multiplicativeExpression)


State 129

  112 prefixUnaryExpression: prefixUnaryOperator • postfixUnaryExpression

    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    postfixUnaryExpression   go to state 178
    primaryExpression        go to state 132
    parenthesizedExpression  go to state 133
    ifExpression             go to state 134
    whenExpression           go to state 135
    jumpExpression           go to state 136


State 130

  111 prefixUnaryExpression: postfixUnaryExpression •

    $default  reduce using rule 111 (prefixUnaryExpression)


State 131

  117 prefixUnaryOperator: excl •

    $default  reduce using rule 117 (prefixUnaryOperator)


State 132

  118 postfixUnaryExpression: primaryExpression • postfixUnaryOperator_opt

    INCR        shift, and go to state 179
    DECR        shift, and go to state 180
    EXCL_NO_WS  shift, and go to state 181

    INCR        [reduce using rule 120 (postfixUnaryOperator_opt)]
    DECR        [reduce using rule 120 (postfixUnaryOperator_opt)]
    EXCL_NO_WS  [reduce using rule 120 (postfixUnaryOperator_opt)]
    $default    reduce using rule 120 (postfixUnaryOperator_opt)

    postfixUnaryOperator_opt  go to state 182
    postfixUnaryOperator      go to state 183


State 133

  126 primaryExpression: parenthesizedExpression •

    $default  reduce using rule 126 (primaryExpression)


State 134

  137 primaryExpression: ifExpression •

    $default  reduce using rule 137 (primaryExpression)


State 135

  138 primaryExpression: whenExpression •

    $default  reduce using rule 138 (primaryExpression)


State 136

  139 primaryExpression: jumpExpression •

    $default  reduce using rule 139 (primaryExpression)


State 137

   63 assignment: IDENTIFIER ADD_ASSIGNMENT expression •

    $default  reduce using rule 63 (assignment)


State 138

   64 assignment: IDENTIFIER SUB_ASSIGNMENT expression •

    $default  reduce using rule 64 (assignment)


State 139

   21 functionValueParamList: functionValueParameter COMMA functionValueParamList •

    $default  reduce using rule 21 (functionValueParamList)


State 140

   24 functionValueParameter: variableDeclaration ASSIGNMENT expression •

    $default  reduce using rule 24 (functionValueParameter)


State 141

   53 functionBody: ASSIGNMENT • expression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 184
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 142

   54 block: LCURL • RCURL
   55      | LCURL • statements RCURL

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    RCURL              shift, and go to state 185
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    DO                 shift, and go to state 186
    FALSE              shift, and go to state 104
    FOR                shift, and go to state 187
    FUN                shift, and go to state 1
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    VAL                shift, and go to state 2
    VAR                shift, and go to state 3
    WHEN               shift, and go to state 109
    WHILE              shift, and go to state 188
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    declaration               go to state 189
    propertyDeclaration       go to state 8
    variable                  go to state 9
    functionDeclaration       go to state 10
    statements                go to state 190
    statement                 go to state 191
    loopStatement             go to state 192
    forStatement              go to state 193
    whileStatement            go to state 194
    doWhileStatement          go to state 195
    expression                go to state 196
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 143

   18 functionDeclaration: FUN IDENTIFIER functionValueParameters COLON type functionBody •

    $default  reduce using rule 18 (functionDeclaration)


State 144

   52 functionBody: block •

    $default  reduce using rule 52 (functionBody)


State 145

   33 typeArgumentsList: typeArgument COMMA typeArgumentsList •

    $default  reduce using rule 33 (typeArgumentsList)


State 146

   44 functionTypeParameter: type •

    $default  reduce using rule 44 (functionTypeParameter)


State 147

   41 functionTypeParamList: functionTypeParameter COMMA functionTypeParamList •

    $default  reduce using rule 41 (functionTypeParamList)


State 148

   49 quests: quests quest •

    $default  reduce using rule 49 (quests)


State 149

   37 functionType: reciverType DOT functionTypeParameters ARROW • type

    LANGLE      shift, and go to state 26
    LPAREN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28

    type                    go to state 197
    userType                go to state 30
    simpleUserType          go to state 31
    reciverType             go to state 32
    functionType            go to state 33
    functionTypeParameters  go to state 34
    parenthesizedType_opt   go to state 35


State 150

   14 propertyDeclaration: variable typeParameters reciverType variableDeclaration assignment SEMICOLON •

    $default  reduce using rule 14 (propertyDeclaration)


State 151

  140 parenthesizedExpression: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 198


State 152

  141 ifExpression: IF LPAREN • expression RPAREN SEMICOLON
  142             | IF LPAREN • expression RPAREN controlStructureBody SEMICOLON
  143             | IF LPAREN • expression RPAREN controlStructureBody SEMICOLON ELSE controlStructureBody

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 199
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 153

  161 jumpExpression: RETURN SEMICOLON •

    $default  reduce using rule 161 (jumpExpression)


State 154

  162 jumpExpression: RETURN expression •

    $default  reduce using rule 162 (jumpExpression)


State 155

  148 whenSubject: LPAREN • expression RPAREN
  149            | LPAREN • VAL variableDeclaration ASSIGNMENT expression RPAREN

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    VAL                shift, and go to state 200
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 201
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 156

  144 whenExpression: WHEN LCURL • RCURL
  145               | WHEN LCURL • whenEntries RCURL

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    RCURL              shift, and go to state 202
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    ELSE               shift, and go to state 203
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    IN                 shift, and go to state 204
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 205
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    whenEntries               go to state 206
    whenEntry                 go to state 207
    whenConditionList         go to state 208
    whenCondition             go to state 209
    jumpExpression            go to state 136


State 157

  146 whenExpression: WHEN whenSubject • LCURL RCURL
  147               | WHEN whenSubject • LCURL whenEntries RCURL

    LCURL  shift, and go to state 210


State 158

   81 disjunction: disjunction DISJ • conjunction

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    conjunction               go to state 211
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 159

   83 conjunction: conjunction CONJ • equality

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    equality                  go to state 212
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 160

   85 equality: equality EQEQ • comparison

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    comparison                go to state 213
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 161

   86 equality: equality EXCL_EQ • comparison

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    comparison                go to state 214
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 162

   87 equality: equality EQEQEQ • comparison

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    comparison                go to state 215
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 163

   88 equality: equality EXCL_EQEQ • comparison

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    comparison                go to state 216
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 164

   90 comparison: comparison LANGLE • infixOperation

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    infixOperation            go to state 217
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 165

   93 comparison: comparison LE • infixOperation

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    infixOperation            go to state 218
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 166

   92 comparison: comparison GE • infixOperation

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    infixOperation            go to state 219
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 167

   91 comparison: comparison RANGE • infixOperation

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    infixOperation            go to state 220
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 168

   95 infixOperation: infixOperation IN • elvisExpression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    elvisExpression           go to state 221
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 169

   97 elvisExpression: elvisExpression QUEST_NO_WS • COLON infixFunctionCall

    COLON  shift, and go to state 222


State 170

   99 infixFunctionCall: infixFunctionCall IDENTIFIER • rangeExpression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    rangeExpression           go to state 223
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 171

  101 rangeExpression: rangeExpression RANGE • additiveExpression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    additiveExpression        go to state 224
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 172

  102 rangeExpression: rangeExpression RANGE_UNTIL • additiveExpression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    additiveExpression        go to state 225
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 173

  104 additiveExpression: additiveExpression ADD • multiplicativeExpression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    multiplicativeExpression  go to state 226
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 174

  105 additiveExpression: additiveExpression SUB • multiplicativeExpression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    multiplicativeExpression  go to state 227
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 175

  107 multiplicativeExpression: multiplicativeExpression MULT • prefixUnaryExpression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    prefixUnaryExpression    go to state 228
    prefixUnaryOperator      go to state 129
    postfixUnaryExpression   go to state 130
    excl                     go to state 131
    primaryExpression        go to state 132
    parenthesizedExpression  go to state 133
    ifExpression             go to state 134
    whenExpression           go to state 135
    jumpExpression           go to state 136


State 176

  108 multiplicativeExpression: multiplicativeExpression DIV • prefixUnaryExpression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    prefixUnaryExpression    go to state 229
    prefixUnaryOperator      go to state 129
    postfixUnaryExpression   go to state 130
    excl                     go to state 131
    primaryExpression        go to state 132
    parenthesizedExpression  go to state 133
    ifExpression             go to state 134
    whenExpression           go to state 135
    jumpExpression           go to state 136


State 177

  109 multiplicativeExpression: multiplicativeExpression MOD • prefixUnaryExpression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    prefixUnaryExpression    go to state 230
    prefixUnaryOperator      go to state 129
    postfixUnaryExpression   go to state 130
    excl                     go to state 131
    primaryExpression        go to state 132
    parenthesizedExpression  go to state 133
    ifExpression             go to state 134
    whenExpression           go to state 135
    jumpExpression           go to state 136


State 178

  112 prefixUnaryExpression: prefixUnaryOperator postfixUnaryExpression •

    $default  reduce using rule 112 (prefixUnaryExpression)


State 179

  121 postfixUnaryOperator: INCR •

    $default  reduce using rule 121 (postfixUnaryOperator)


State 180

  122 postfixUnaryOperator: DECR •

    $default  reduce using rule 122 (postfixUnaryOperator)


State 181

  123 postfixUnaryOperator: EXCL_NO_WS • excl

    EXCL_NO_WS  shift, and go to state 99
    EXCL_WS     shift, and go to state 100

    excl  go to state 231


State 182

  118 postfixUnaryExpression: primaryExpression postfixUnaryOperator_opt •

    $default  reduce using rule 118 (postfixUnaryExpression)


State 183

  119 postfixUnaryOperator_opt: postfixUnaryOperator •

    $default  reduce using rule 119 (postfixUnaryOperator_opt)


State 184

   53 functionBody: ASSIGNMENT expression •

    $default  reduce using rule 53 (functionBody)


State 185

   54 block: LCURL RCURL •

    $default  reduce using rule 54 (block)


State 186

   73 doWhileStatement: DO • controlStructureBody WHILE LPAREN expression RPAREN

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    LCURL              shift, and go to state 142
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    DO                 shift, and go to state 186
    FALSE              shift, and go to state 104
    FOR                shift, and go to state 187
    FUN                shift, and go to state 1
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    VAL                shift, and go to state 2
    VAR                shift, and go to state 3
    WHEN               shift, and go to state 109
    WHILE              shift, and go to state 188
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    WHILE  [reduce using rule 160 (controlStructureBody)]

    declaration               go to state 189
    propertyDeclaration       go to state 8
    variable                  go to state 9
    functionDeclaration       go to state 10
    block                     go to state 232
    statement                 go to state 233
    loopStatement             go to state 192
    forStatement              go to state 193
    whileStatement            go to state 194
    doWhileStatement          go to state 195
    expression                go to state 196
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    controlStructureBody      go to state 234
    jumpExpression            go to state 136


State 187

   68 forStatement: FOR • LPAREN variableDeclarations IN expression RPAREN forStatement_opt SEMICOLON

    LPAREN  shift, and go to state 235


State 188

   71 whileStatement: WHILE • LPAREN expression RPAREN controlStructureBody
   72               | WHILE • LPAREN expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 236


State 189

   59 statement: declaration •

    $default  reduce using rule 59 (statement)


State 190

   55 block: LCURL statements • RCURL
   58 statements: statements • SEMICOLON statement

    RCURL      shift, and go to state 237
    SEMICOLON  shift, and go to state 238


State 191

   56 statements: statement •
   57           | statement • SEMICOLON

    SEMICOLON  shift, and go to state 239

    SEMICOLON  [reduce using rule 56 (statements)]
    $default   reduce using rule 56 (statements)


State 192

   60 statement: loopStatement •

    $default  reduce using rule 60 (statement)


State 193

   65 loopStatement: forStatement •

    $default  reduce using rule 65 (loopStatement)


State 194

   66 loopStatement: whileStatement •

    $default  reduce using rule 66 (loopStatement)


State 195

   67 loopStatement: doWhileStatement •

    $default  reduce using rule 67 (loopStatement)


State 196

   61 statement: expression •

    $default  reduce using rule 61 (statement)


State 197

   37 functionType: reciverType DOT functionTypeParameters ARROW type •

    $default  reduce using rule 37 (functionType)


State 198

  140 parenthesizedExpression: LPAREN expression RPAREN •

    $default  reduce using rule 140 (parenthesizedExpression)


State 199

  141 ifExpression: IF LPAREN expression • RPAREN SEMICOLON
  142             | IF LPAREN expression • RPAREN controlStructureBody SEMICOLON
  143             | IF LPAREN expression • RPAREN controlStructureBody SEMICOLON ELSE controlStructureBody

    RPAREN  shift, and go to state 240


State 200

  149 whenSubject: LPAREN VAL • variableDeclaration ASSIGNMENT expression RPAREN

    IDENTIFIER  shift, and go to state 17

    variableDeclaration  go to state 241


State 201

  148 whenSubject: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 242


State 202

  144 whenExpression: WHEN LCURL RCURL •

    $default  reduce using rule 144 (whenExpression)


State 203

  153 whenEntry: ELSE • ARROW controlStructureBody SEMICOLON

    ARROW  shift, and go to state 243


State 204

  157 whenCondition: IN • expression

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 244
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 205

  156 whenCondition: expression •

    $default  reduce using rule 156 (whenCondition)


State 206

  145 whenExpression: WHEN LCURL whenEntries • RCURL
  150 whenEntries: whenEntries • whenEntry

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    RCURL              shift, and go to state 245
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    ELSE               shift, and go to state 203
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    IN                 shift, and go to state 204
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 205
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    whenEntry                 go to state 246
    whenConditionList         go to state 208
    whenCondition             go to state 209
    jumpExpression            go to state 136


State 207

  151 whenEntries: whenEntry •

    $default  reduce using rule 151 (whenEntries)


State 208

  152 whenEntry: whenConditionList • ARROW controlStructureBody SEMICOLON
  154 whenConditionList: whenConditionList • COMMA whenCondition

    COMMA  shift, and go to state 247
    ARROW  shift, and go to state 248


State 209

  155 whenConditionList: whenCondition •

    $default  reduce using rule 155 (whenConditionList)


State 210

  146 whenExpression: WHEN whenSubject LCURL • RCURL
  147               | WHEN whenSubject LCURL • whenEntries RCURL

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    RCURL              shift, and go to state 249
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    ELSE               shift, and go to state 203
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    IN                 shift, and go to state 204
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 205
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    whenEntries               go to state 250
    whenEntry                 go to state 207
    whenConditionList         go to state 208
    whenCondition             go to state 209
    jumpExpression            go to state 136


State 211

   81 disjunction: disjunction DISJ conjunction •
   83 conjunction: conjunction • CONJ equality

    CONJ  shift, and go to state 159

    $default  reduce using rule 81 (disjunction)


State 212

   83 conjunction: conjunction CONJ equality •
   85 equality: equality • EQEQ comparison
   86         | equality • EXCL_EQ comparison
   87         | equality • EQEQEQ comparison
   88         | equality • EXCL_EQEQ comparison

    EQEQ       shift, and go to state 160
    EXCL_EQ    shift, and go to state 161
    EQEQEQ     shift, and go to state 162
    EXCL_EQEQ  shift, and go to state 163

    $default  reduce using rule 83 (conjunction)


State 213

   85 equality: equality EQEQ comparison •
   90 comparison: comparison • LANGLE infixOperation
   91           | comparison • RANGE infixOperation
   92           | comparison • GE infixOperation
   93           | comparison • LE infixOperation

    LANGLE  shift, and go to state 164
    LE      shift, and go to state 165
    GE      shift, and go to state 166
    RANGE   shift, and go to state 167

    RANGE     [reduce using rule 85 (equality)]
    $default  reduce using rule 85 (equality)


State 214

   86 equality: equality EXCL_EQ comparison •
   90 comparison: comparison • LANGLE infixOperation
   91           | comparison • RANGE infixOperation
   92           | comparison • GE infixOperation
   93           | comparison • LE infixOperation

    LANGLE  shift, and go to state 164
    LE      shift, and go to state 165
    GE      shift, and go to state 166
    RANGE   shift, and go to state 167

    RANGE     [reduce using rule 86 (equality)]
    $default  reduce using rule 86 (equality)


State 215

   87 equality: equality EQEQEQ comparison •
   90 comparison: comparison • LANGLE infixOperation
   91           | comparison • RANGE infixOperation
   92           | comparison • GE infixOperation
   93           | comparison • LE infixOperation

    LANGLE  shift, and go to state 164
    LE      shift, and go to state 165
    GE      shift, and go to state 166
    RANGE   shift, and go to state 167

    RANGE     [reduce using rule 87 (equality)]
    $default  reduce using rule 87 (equality)


State 216

   88 equality: equality EXCL_EQEQ comparison •
   90 comparison: comparison • LANGLE infixOperation
   91           | comparison • RANGE infixOperation
   92           | comparison • GE infixOperation
   93           | comparison • LE infixOperation

    LANGLE  shift, and go to state 164
    LE      shift, and go to state 165
    GE      shift, and go to state 166
    RANGE   shift, and go to state 167

    RANGE     [reduce using rule 88 (equality)]
    $default  reduce using rule 88 (equality)


State 217

   90 comparison: comparison LANGLE infixOperation •
   95 infixOperation: infixOperation • IN elvisExpression

    IN  shift, and go to state 168

    IN        [reduce using rule 90 (comparison)]
    $default  reduce using rule 90 (comparison)


State 218

   93 comparison: comparison LE infixOperation •
   95 infixOperation: infixOperation • IN elvisExpression

    IN  shift, and go to state 168

    IN        [reduce using rule 93 (comparison)]
    $default  reduce using rule 93 (comparison)


State 219

   92 comparison: comparison GE infixOperation •
   95 infixOperation: infixOperation • IN elvisExpression

    IN  shift, and go to state 168

    IN        [reduce using rule 92 (comparison)]
    $default  reduce using rule 92 (comparison)


State 220

   91 comparison: comparison RANGE infixOperation •
   95 infixOperation: infixOperation • IN elvisExpression

    IN  shift, and go to state 168

    IN        [reduce using rule 91 (comparison)]
    $default  reduce using rule 91 (comparison)


State 221

   95 infixOperation: infixOperation IN elvisExpression •
   97 elvisExpression: elvisExpression • QUEST_NO_WS COLON infixFunctionCall

    QUEST_NO_WS  shift, and go to state 169

    QUEST_NO_WS  [reduce using rule 95 (infixOperation)]
    $default     reduce using rule 95 (infixOperation)


State 222

   97 elvisExpression: elvisExpression QUEST_NO_WS COLON • infixFunctionCall

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    infixFunctionCall         go to state 251
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 223

   99 infixFunctionCall: infixFunctionCall IDENTIFIER rangeExpression •
  101 rangeExpression: rangeExpression • RANGE additiveExpression
  102                | rangeExpression • RANGE_UNTIL additiveExpression

    RANGE        shift, and go to state 171
    RANGE_UNTIL  shift, and go to state 172

    RANGE        [reduce using rule 99 (infixFunctionCall)]
    RANGE_UNTIL  [reduce using rule 99 (infixFunctionCall)]
    $default     reduce using rule 99 (infixFunctionCall)


State 224

  101 rangeExpression: rangeExpression RANGE additiveExpression •
  104 additiveExpression: additiveExpression • ADD multiplicativeExpression
  105                   | additiveExpression • SUB multiplicativeExpression

    ADD  shift, and go to state 173
    SUB  shift, and go to state 174

    ADD       [reduce using rule 101 (rangeExpression)]
    SUB       [reduce using rule 101 (rangeExpression)]
    $default  reduce using rule 101 (rangeExpression)


State 225

  102 rangeExpression: rangeExpression RANGE_UNTIL additiveExpression •
  104 additiveExpression: additiveExpression • ADD multiplicativeExpression
  105                   | additiveExpression • SUB multiplicativeExpression

    ADD  shift, and go to state 173
    SUB  shift, and go to state 174

    ADD       [reduce using rule 102 (rangeExpression)]
    SUB       [reduce using rule 102 (rangeExpression)]
    $default  reduce using rule 102 (rangeExpression)


State 226

  104 additiveExpression: additiveExpression ADD multiplicativeExpression •
  107 multiplicativeExpression: multiplicativeExpression • MULT prefixUnaryExpression
  108                         | multiplicativeExpression • DIV prefixUnaryExpression
  109                         | multiplicativeExpression • MOD prefixUnaryExpression

    MULT  shift, and go to state 175
    DIV   shift, and go to state 176
    MOD   shift, and go to state 177

    $default  reduce using rule 104 (additiveExpression)


State 227

  105 additiveExpression: additiveExpression SUB multiplicativeExpression •
  107 multiplicativeExpression: multiplicativeExpression • MULT prefixUnaryExpression
  108                         | multiplicativeExpression • DIV prefixUnaryExpression
  109                         | multiplicativeExpression • MOD prefixUnaryExpression

    MULT  shift, and go to state 175
    DIV   shift, and go to state 176
    MOD   shift, and go to state 177

    $default  reduce using rule 105 (additiveExpression)


State 228

  107 multiplicativeExpression: multiplicativeExpression MULT prefixUnaryExpression •

    $default  reduce using rule 107 (multiplicativeExpression)


State 229

  108 multiplicativeExpression: multiplicativeExpression DIV prefixUnaryExpression •

    $default  reduce using rule 108 (multiplicativeExpression)


State 230

  109 multiplicativeExpression: multiplicativeExpression MOD prefixUnaryExpression •

    $default  reduce using rule 109 (multiplicativeExpression)


State 231

  123 postfixUnaryOperator: EXCL_NO_WS excl •

    $default  reduce using rule 123 (postfixUnaryOperator)


State 232

  158 controlStructureBody: block •

    $default  reduce using rule 158 (controlStructureBody)


State 233

  159 controlStructureBody: statement •

    $default  reduce using rule 159 (controlStructureBody)


State 234

   73 doWhileStatement: DO controlStructureBody • WHILE LPAREN expression RPAREN

    WHILE  shift, and go to state 252


State 235

   68 forStatement: FOR LPAREN • variableDeclarations IN expression RPAREN forStatement_opt SEMICOLON

    LPAREN      shift, and go to state 253
    IDENTIFIER  shift, and go to state 17

    variableDeclarations      go to state 254
    variableDeclaration       go to state 255
    multiVariableDeclaration  go to state 256


State 236

   71 whileStatement: WHILE LPAREN • expression RPAREN controlStructureBody
   72               | WHILE LPAREN • expression RPAREN SEMICOLON

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 257
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 237

   55 block: LCURL statements RCURL •

    $default  reduce using rule 55 (block)


State 238

   58 statements: statements SEMICOLON • statement

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    DO                 shift, and go to state 186
    FALSE              shift, and go to state 104
    FOR                shift, and go to state 187
    FUN                shift, and go to state 1
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    VAL                shift, and go to state 2
    VAR                shift, and go to state 3
    WHEN               shift, and go to state 109
    WHILE              shift, and go to state 188
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    declaration               go to state 189
    propertyDeclaration       go to state 8
    variable                  go to state 9
    functionDeclaration       go to state 10
    statement                 go to state 258
    loopStatement             go to state 192
    forStatement              go to state 193
    whileStatement            go to state 194
    doWhileStatement          go to state 195
    expression                go to state 196
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 239

   57 statements: statement SEMICOLON •

    $default  reduce using rule 57 (statements)


State 240

  141 ifExpression: IF LPAREN expression RPAREN • SEMICOLON
  142             | IF LPAREN expression RPAREN • controlStructureBody SEMICOLON
  143             | IF LPAREN expression RPAREN • controlStructureBody SEMICOLON ELSE controlStructureBody

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    LCURL              shift, and go to state 142
    SEMICOLON          shift, and go to state 259
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    DO                 shift, and go to state 186
    FALSE              shift, and go to state 104
    FOR                shift, and go to state 187
    FUN                shift, and go to state 1
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    VAL                shift, and go to state 2
    VAR                shift, and go to state 3
    WHEN               shift, and go to state 109
    WHILE              shift, and go to state 188
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    SEMICOLON  [reduce using rule 160 (controlStructureBody)]

    declaration               go to state 189
    propertyDeclaration       go to state 8
    variable                  go to state 9
    functionDeclaration       go to state 10
    block                     go to state 232
    statement                 go to state 233
    loopStatement             go to state 192
    forStatement              go to state 193
    whileStatement            go to state 194
    doWhileStatement          go to state 195
    expression                go to state 196
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    controlStructureBody      go to state 260
    jumpExpression            go to state 136


State 241

  149 whenSubject: LPAREN VAL variableDeclaration • ASSIGNMENT expression RPAREN

    ASSIGNMENT  shift, and go to state 261


State 242

  148 whenSubject: LPAREN expression RPAREN •

    $default  reduce using rule 148 (whenSubject)


State 243

  153 whenEntry: ELSE ARROW • controlStructureBody SEMICOLON

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    LCURL              shift, and go to state 142
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    DO                 shift, and go to state 186
    FALSE              shift, and go to state 104
    FOR                shift, and go to state 187
    FUN                shift, and go to state 1
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    VAL                shift, and go to state 2
    VAR                shift, and go to state 3
    WHEN               shift, and go to state 109
    WHILE              shift, and go to state 188
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    $default  reduce using rule 160 (controlStructureBody)

    declaration               go to state 189
    propertyDeclaration       go to state 8
    variable                  go to state 9
    functionDeclaration       go to state 10
    block                     go to state 232
    statement                 go to state 233
    loopStatement             go to state 192
    forStatement              go to state 193
    whileStatement            go to state 194
    doWhileStatement          go to state 195
    expression                go to state 196
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    controlStructureBody      go to state 262
    jumpExpression            go to state 136


State 244

  157 whenCondition: IN expression •

    $default  reduce using rule 157 (whenCondition)


State 245

  145 whenExpression: WHEN LCURL whenEntries RCURL •

    $default  reduce using rule 145 (whenExpression)


State 246

  150 whenEntries: whenEntries whenEntry •

    $default  reduce using rule 150 (whenEntries)


State 247

  154 whenConditionList: whenConditionList COMMA • whenCondition

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    IN                 shift, and go to state 204
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 205
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    whenCondition             go to state 263
    jumpExpression            go to state 136


State 248

  152 whenEntry: whenConditionList ARROW • controlStructureBody SEMICOLON

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    LCURL              shift, and go to state 142
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    DO                 shift, and go to state 186
    FALSE              shift, and go to state 104
    FOR                shift, and go to state 187
    FUN                shift, and go to state 1
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    VAL                shift, and go to state 2
    VAR                shift, and go to state 3
    WHEN               shift, and go to state 109
    WHILE              shift, and go to state 188
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    $default  reduce using rule 160 (controlStructureBody)

    declaration               go to state 189
    propertyDeclaration       go to state 8
    variable                  go to state 9
    functionDeclaration       go to state 10
    block                     go to state 232
    statement                 go to state 233
    loopStatement             go to state 192
    forStatement              go to state 193
    whileStatement            go to state 194
    doWhileStatement          go to state 195
    expression                go to state 196
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    controlStructureBody      go to state 264
    jumpExpression            go to state 136


State 249

  146 whenExpression: WHEN whenSubject LCURL RCURL •

    $default  reduce using rule 146 (whenExpression)


State 250

  147 whenExpression: WHEN whenSubject LCURL whenEntries • RCURL
  150 whenEntries: whenEntries • whenEntry

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    RCURL              shift, and go to state 265
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    ELSE               shift, and go to state 203
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    IN                 shift, and go to state 204
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 205
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    whenEntry                 go to state 246
    whenConditionList         go to state 208
    whenCondition             go to state 209
    jumpExpression            go to state 136


State 251

   97 elvisExpression: elvisExpression QUEST_NO_WS COLON infixFunctionCall •
   99 infixFunctionCall: infixFunctionCall • IDENTIFIER rangeExpression

    IDENTIFIER  shift, and go to state 170

    IDENTIFIER  [reduce using rule 97 (elvisExpression)]
    $default    reduce using rule 97 (elvisExpression)


State 252

   73 doWhileStatement: DO controlStructureBody WHILE • LPAREN expression RPAREN

    LPAREN  shift, and go to state 266


State 253

   77 multiVariableDeclaration: LPAREN • variableDeclarationList RPAREN

    IDENTIFIER  shift, and go to state 17

    variableDeclaration      go to state 24
    variableDeclarationList  go to state 267


State 254

   68 forStatement: FOR LPAREN variableDeclarations • IN expression RPAREN forStatement_opt SEMICOLON

    IN  shift, and go to state 268


State 255

   74 variableDeclarations: variableDeclaration •

    $default  reduce using rule 74 (variableDeclarations)


State 256

   75 variableDeclarations: multiVariableDeclaration •

    $default  reduce using rule 75 (variableDeclarations)


State 257

   71 whileStatement: WHILE LPAREN expression • RPAREN controlStructureBody
   72               | WHILE LPAREN expression • RPAREN SEMICOLON

    RPAREN  shift, and go to state 269


State 258

   58 statements: statements SEMICOLON statement •

    $default  reduce using rule 58 (statements)


State 259

  141 ifExpression: IF LPAREN expression RPAREN SEMICOLON •

    $default  reduce using rule 141 (ifExpression)


State 260

  142 ifExpression: IF LPAREN expression RPAREN controlStructureBody • SEMICOLON
  143             | IF LPAREN expression RPAREN controlStructureBody • SEMICOLON ELSE controlStructureBody

    SEMICOLON  shift, and go to state 270


State 261

  149 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT • expression RPAREN

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 271
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 262

  153 whenEntry: ELSE ARROW controlStructureBody • SEMICOLON

    SEMICOLON  shift, and go to state 272


State 263

  154 whenConditionList: whenConditionList COMMA whenCondition •

    $default  reduce using rule 154 (whenConditionList)


State 264

  152 whenEntry: whenConditionList ARROW controlStructureBody • SEMICOLON

    SEMICOLON  shift, and go to state 273


State 265

  147 whenExpression: WHEN whenSubject LCURL whenEntries RCURL •

    $default  reduce using rule 147 (whenExpression)


State 266

   73 doWhileStatement: DO controlStructureBody WHILE LPAREN • expression RPAREN

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 274
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 267

   77 multiVariableDeclaration: LPAREN variableDeclarationList • RPAREN
   79 variableDeclarationList: variableDeclarationList • COMMA variableDeclaration

    COMMA   shift, and go to state 48
    RPAREN  shift, and go to state 275


State 268

   68 forStatement: FOR LPAREN variableDeclarations IN • expression RPAREN forStatement_opt SEMICOLON

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    FALSE              shift, and go to state 104
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    WHEN               shift, and go to state 109
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    expression                go to state 276
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    jumpExpression            go to state 136


State 269

   71 whileStatement: WHILE LPAREN expression RPAREN • controlStructureBody
   72               | WHILE LPAREN expression RPAREN • SEMICOLON

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    LCURL              shift, and go to state 142
    SEMICOLON          shift, and go to state 277
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    DO                 shift, and go to state 186
    FALSE              shift, and go to state 104
    FOR                shift, and go to state 187
    FUN                shift, and go to state 1
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    VAL                shift, and go to state 2
    VAR                shift, and go to state 3
    WHEN               shift, and go to state 109
    WHILE              shift, and go to state 188
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    ADD         [reduce using rule 160 (controlStructureBody)]
    SUB         [reduce using rule 160 (controlStructureBody)]
    INCR        [reduce using rule 160 (controlStructureBody)]
    DECR        [reduce using rule 160 (controlStructureBody)]
    EXCL_NO_WS  [reduce using rule 160 (controlStructureBody)]
    SEMICOLON   [reduce using rule 160 (controlStructureBody)]
    WHILE       [reduce using rule 160 (controlStructureBody)]
    IDENTIFIER  [reduce using rule 160 (controlStructureBody)]
    $default    reduce using rule 160 (controlStructureBody)

    declaration               go to state 189
    propertyDeclaration       go to state 8
    variable                  go to state 9
    functionDeclaration       go to state 10
    block                     go to state 232
    statement                 go to state 233
    loopStatement             go to state 192
    forStatement              go to state 193
    whileStatement            go to state 194
    doWhileStatement          go to state 195
    expression                go to state 196
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    controlStructureBody      go to state 278
    jumpExpression            go to state 136


State 270

  142 ifExpression: IF LPAREN expression RPAREN controlStructureBody SEMICOLON •
  143             | IF LPAREN expression RPAREN controlStructureBody SEMICOLON • ELSE controlStructureBody

    ELSE  shift, and go to state 279

    $default  reduce using rule 142 (ifExpression)


State 271

  149 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT expression • RPAREN

    RPAREN  shift, and go to state 280


State 272

  153 whenEntry: ELSE ARROW controlStructureBody SEMICOLON •

    $default  reduce using rule 153 (whenEntry)


State 273

  152 whenEntry: whenConditionList ARROW controlStructureBody SEMICOLON •

    $default  reduce using rule 152 (whenEntry)


State 274

   73 doWhileStatement: DO controlStructureBody WHILE LPAREN expression • RPAREN

    RPAREN  shift, and go to state 281


State 275

   77 multiVariableDeclaration: LPAREN variableDeclarationList RPAREN •

    $default  reduce using rule 77 (multiVariableDeclaration)


State 276

   68 forStatement: FOR LPAREN variableDeclarations IN expression • RPAREN forStatement_opt SEMICOLON

    RPAREN  shift, and go to state 282


State 277

   72 whileStatement: WHILE LPAREN expression RPAREN SEMICOLON •

    $default  reduce using rule 72 (whileStatement)


State 278

   71 whileStatement: WHILE LPAREN expression RPAREN controlStructureBody •

    $default  reduce using rule 71 (whileStatement)


State 279

  143 ifExpression: IF LPAREN expression RPAREN controlStructureBody SEMICOLON ELSE • controlStructureBody

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    LCURL              shift, and go to state 142
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    DO                 shift, and go to state 186
    FALSE              shift, and go to state 104
    FOR                shift, and go to state 187
    FUN                shift, and go to state 1
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    VAL                shift, and go to state 2
    VAR                shift, and go to state 3
    WHEN               shift, and go to state 109
    WHILE              shift, and go to state 188
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    ADD         [reduce using rule 160 (controlStructureBody)]
    SUB         [reduce using rule 160 (controlStructureBody)]
    INCR        [reduce using rule 160 (controlStructureBody)]
    DECR        [reduce using rule 160 (controlStructureBody)]
    EXCL_NO_WS  [reduce using rule 160 (controlStructureBody)]
    WHILE       [reduce using rule 160 (controlStructureBody)]
    IDENTIFIER  [reduce using rule 160 (controlStructureBody)]
    $default    reduce using rule 160 (controlStructureBody)

    declaration               go to state 189
    propertyDeclaration       go to state 8
    variable                  go to state 9
    functionDeclaration       go to state 10
    block                     go to state 232
    statement                 go to state 233
    loopStatement             go to state 192
    forStatement              go to state 193
    whileStatement            go to state 194
    doWhileStatement          go to state 195
    expression                go to state 196
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    controlStructureBody      go to state 283
    jumpExpression            go to state 136


State 280

  149 whenSubject: LPAREN VAL variableDeclaration ASSIGNMENT expression RPAREN •

    $default  reduce using rule 149 (whenSubject)


State 281

   73 doWhileStatement: DO controlStructureBody WHILE LPAREN expression RPAREN •

    $default  reduce using rule 73 (doWhileStatement)


State 282

   68 forStatement: FOR LPAREN variableDeclarations IN expression RPAREN • forStatement_opt SEMICOLON

    ADD                shift, and go to state 95
    SUB                shift, and go to state 96
    INCR               shift, and go to state 97
    DECR               shift, and go to state 98
    EXCL_NO_WS         shift, and go to state 99
    EXCL_WS            shift, and go to state 100
    LPAREN             shift, and go to state 101
    LCURL              shift, and go to state 142
    BREAK              shift, and go to state 102
    CONTINUE           shift, and go to state 103
    DO                 shift, and go to state 186
    FALSE              shift, and go to state 104
    FOR                shift, and go to state 187
    FUN                shift, and go to state 1
    IF                 shift, and go to state 105
    NULL_K             shift, and go to state 106
    RETURN             shift, and go to state 107
    TRUE               shift, and go to state 108
    VAL                shift, and go to state 2
    VAR                shift, and go to state 3
    WHEN               shift, and go to state 109
    WHILE              shift, and go to state 188
    INTEGER_LITERAL    shift, and go to state 110
    HEX_LITERAL        shift, and go to state 111
    REAL_LITERAL       shift, and go to state 112
    CHARACTER_LITERAL  shift, and go to state 113
    IDENTIFIER         shift, and go to state 114
    LINE_STRING        shift, and go to state 115
    MULTILINE_STRING   shift, and go to state 116

    SEMICOLON  reduce using rule 70 (forStatement_opt)
    SEMICOLON  [reduce using rule 160 (controlStructureBody)]
    $default   reduce using rule 70 (forStatement_opt)

    declaration               go to state 189
    propertyDeclaration       go to state 8
    variable                  go to state 9
    functionDeclaration       go to state 10
    block                     go to state 232
    statement                 go to state 233
    loopStatement             go to state 192
    forStatement              go to state 193
    forStatement_opt          go to state 284
    whileStatement            go to state 194
    doWhileStatement          go to state 195
    expression                go to state 196
    disjunction               go to state 118
    conjunction               go to state 119
    equality                  go to state 120
    comparison                go to state 121
    infixOperation            go to state 122
    elvisExpression           go to state 123
    infixFunctionCall         go to state 124
    rangeExpression           go to state 125
    additiveExpression        go to state 126
    multiplicativeExpression  go to state 127
    prefixUnaryExpression     go to state 128
    prefixUnaryOperator       go to state 129
    postfixUnaryExpression    go to state 130
    excl                      go to state 131
    primaryExpression         go to state 132
    parenthesizedExpression   go to state 133
    ifExpression              go to state 134
    whenExpression            go to state 135
    controlStructureBody      go to state 285
    jumpExpression            go to state 136


State 283

  143 ifExpression: IF LPAREN expression RPAREN controlStructureBody SEMICOLON ELSE controlStructureBody •

    $default  reduce using rule 143 (ifExpression)


State 284

   68 forStatement: FOR LPAREN variableDeclarations IN expression RPAREN forStatement_opt • SEMICOLON

    SEMICOLON  shift, and go to state 286


State 285

   69 forStatement_opt: controlStructureBody •

    $default  reduce using rule 69 (forStatement_opt)


State 286

   68 forStatement: FOR LPAREN variableDeclarations IN expression RPAREN forStatement_opt SEMICOLON •

    $default  reduce using rule 68 (forStatement)
